{"ast":null,"code":"var _jsxFileName = \"/Users/shivampanwar/stark-site/src/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = (email, password, role) => {\n    // Mock authentication logic; replace with API call as needed\n    if (email === \"admin@example.com\" && password === \"admin123\" && role === \"admin\" || email === \"user@example.com\" && password === \"user123\" && role === \"user\") {\n      setUser({\n        email,\n        role\n      });\n    } else {\n      alert(\"Invalid credentials\");\n    }\n  };\n  const logout = () => setUser(null);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","login","email","password","role","alert","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/shivampanwar/stark-site/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const login = (email, password, role) => {\n    // Mock authentication logic; replace with API call as needed\n    if ((email === \"admin@example.com\" && password === \"admin123\" && role === \"admin\") ||\n        (email === \"user@example.com\" && password === \"user123\" && role === \"user\")) {\n      setUser({ email, role });\n    } else {\n      alert(\"Invalid credentials\");\n    }\n  };\n\n  const logout = () => setUser(null);\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMU,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;IACvC;IACA,IAAKF,KAAK,KAAK,mBAAmB,IAAIC,QAAQ,KAAK,UAAU,IAAIC,IAAI,KAAK,OAAO,IAC5EF,KAAK,KAAK,kBAAkB,IAAIC,QAAQ,KAAK,SAAS,IAAIC,IAAI,KAAK,MAAO,EAAE;MAC/EJ,OAAO,CAAC;QAAEE,KAAK;QAAEE;MAAK,CAAC,CAAC;IAC1B,CAAC,MAAM;MACLC,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAMN,OAAO,CAAC,IAAI,CAAC;EAElC,oBACEN,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET,IAAI;MAAEE,KAAK;MAAEK;IAAO,CAAE;IAAAT,QAAA,EAClDA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACd,EAAA,CApBWF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAsBzB,OAAO,MAAMkB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACG,WAAW,CAAC;AAAA;AAACoB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}